<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-DES8B8NC" failures="0" tests="21" name="Firefox Browser Test" time="1.738" errors="0" timestamp="2022-11-04T18:52:13 IST">
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="1.048">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line
Build info: version: &amp;apos;4.4.0&amp;apos;, revision: &amp;apos;e5c75ed026a&amp;apos;
System info: host: &amp;apos;LAPTOP-DES8B8NC&amp;apos;, ip: &amp;apos;192.168.1.3&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-DES8B8NC', ip: '192.168.1.3', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:110)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at ExecuteClasses.BaseClass.beforeMethod(BaseClass.java:48)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132582E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568132585E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132593E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568132603E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132608E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568132609E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132616E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.127">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line
Build info: version: &amp;apos;4.4.0&amp;apos;, revision: &amp;apos;e5c75ed026a&amp;apos;
System info: host: &amp;apos;LAPTOP-DES8B8NC&amp;apos;, ip: &amp;apos;192.168.1.3&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-DES8B8NC', ip: '192.168.1.3', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:110)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at ExecuteClasses.BaseClass.beforeMethod(BaseClass.java:48)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132749E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568132751E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132755E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568132756E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132761E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.136">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line
Build info: version: &amp;apos;4.4.0&amp;apos;, revision: &amp;apos;e5c75ed026a&amp;apos;
System info: host: &amp;apos;LAPTOP-DES8B8NC&amp;apos;, ip: &amp;apos;192.168.1.3&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-DES8B8NC', ip: '192.168.1.3', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:110)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at ExecuteClasses.BaseClass.beforeMethod(BaseClass.java:48)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132904E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568132905E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132909E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.66756813291E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132913E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568132914E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568132917E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568132918E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.66756813292E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.132">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line
Build info: version: &amp;apos;4.4.0&amp;apos;, revision: &amp;apos;e5c75ed026a&amp;apos;
System info: host: &amp;apos;LAPTOP-DES8B8NC&amp;apos;, ip: &amp;apos;192.168.1.3&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-DES8B8NC', ip: '192.168.1.3', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:110)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at ExecuteClasses.BaseClass.beforeMethod(BaseClass.java:48)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568133055E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.66756813306E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568133063E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568133063E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568133068E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.66756813307E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568133073E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="0.112">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line
Build info: version: &amp;apos;4.4.0&amp;apos;, revision: &amp;apos;e5c75ed026a&amp;apos;
System info: host: &amp;apos;LAPTOP-DES8B8NC&amp;apos;, ip: &amp;apos;192.168.1.3&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'LAPTOP-DES8B8NC', ip: '192.168.1.3', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:110)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at ExecuteClasses.BaseClass.beforeMethod(BaseClass.java:48)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568133197E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568133199E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.6675681332E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568133201E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568133203E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568133203E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568133205E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@BeforeMethod beforeMethod" time="-1.667568133206E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="ExecuteClasses.BaseClass" name="@AfterMethod afterMethod" time="-1.667568133207E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="ExecuteClasses.LoginPageTestClass" name="VerifyTheLogoIsDisplayedOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyTheLogoIsDisplayedOrNot -->
  <testcase classname="ExecuteClasses.LoginPageTestClass" name="verifySuccessfullLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifySuccessfullLogin -->
  <testcase classname="ExecuteClasses.LoginPageTestClass" name="verifyUnsuccessfullLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfullLogin -->
  <testcase classname="ExecuteClasses.LoginPageTestClass" name="verifyUnsuccessfullLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfullLogin -->
  <testcase classname="ExecuteClasses.HomePageTestClass" name="verifyTheD4StoreIsDisplayedOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheD4StoreIsDisplayedOrNot -->
  <testcase classname="ExecuteClasses.HomePageTestClass" name="verifyTheLogoutButtonIsWorksFineOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheLogoutButtonIsWorksFineOrNot -->
  <testcase classname="ExecuteClasses.HomePageTestClass" name="verifyTheProductTabIsDisplayedOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheProductTabIsDisplayedOrNot -->
  <testcase classname="ExecuteClasses.ProductPageTestClass" name="verifyTheAddProductButtonIsVisibleOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheAddProductButtonIsVisibleOrNot -->
  <testcase classname="ExecuteClasses.ProductPageTestClass" name="verifyThePrintMenuIsDisplayedByClickingOnPrintMenu" time="0.0">
    <skipped/>
  </testcase> <!-- verifyThePrintMenuIsDisplayedByClickingOnPrintMenu -->
  <testcase classname="ExecuteClasses.ProductPageTestClass" name="verifyTheProductSearchByUsingCode" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheProductSearchByUsingCode -->
  <testcase classname="ExecuteClasses.ProductPageTestClass" name="verifyTheProductSearchByUsingName" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheProductSearchByUsingName -->
  <testcase classname="ExecuteClasses.ProductPageTestClass" name="verifyTheProductsPageIsVisibleByClickingProductTab" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheProductsPageIsVisibleByClickingProductTab -->
  <testcase classname="ExecuteClasses.StoresPageTestClass" name="createANewStore" time="0.0">
    <skipped/>
  </testcase> <!-- createANewStore -->
  <testcase classname="ExecuteClasses.StoresPageTestClass" name="verifyStoreNameSearchByUsingStoreName" time="0.0">
    <skipped/>
  </testcase> <!-- verifyStoreNameSearchByUsingStoreName -->
  <testcase classname="ExecuteClasses.StoresPageTestClass" name="verifyTheAddstoreButtonIsVisibleOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheAddstoreButtonIsVisibleOrNot -->
  <testcase classname="ExecuteClasses.StoresPageTestClass" name="verifyTheStorePageIsVisibleByClickingOnStoresTab" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheStorePageIsVisibleByClickingOnStoresTab -->
  <testcase classname="ExecuteClasses.WaiterPageTestClass" name="AddNewWaiter" time="0.0">
    <skipped/>
  </testcase> <!-- AddNewWaiter -->
  <testcase classname="ExecuteClasses.WaiterPageTestClass" name="verifySearchAWaiterByUSingName" time="0.0">
    <skipped/>
  </testcase> <!-- verifySearchAWaiterByUSingName -->
  <testcase classname="ExecuteClasses.WaiterPageTestClass" name="verifySearchAWaiterByUsingMobileNumber" time="0.0">
    <skipped/>
  </testcase> <!-- verifySearchAWaiterByUsingMobileNumber -->
  <testcase classname="ExecuteClasses.WaiterPageTestClass" name="verifyTheAddWaiterButtonIsVisibleOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheAddWaiterButtonIsVisibleOrNot -->
  <testcase classname="ExecuteClasses.WaiterPageTestClass" name="verifyTheWaiterPageIsVisibleByClickingOnPeopleWaiter" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheWaiterPageIsVisibleByClickingOnPeopleWaiter -->
</testsuite> <!-- Firefox Browser Test -->
